/*
 * This file is generated by jOOQ.
 */
package al.bruno.task.organiser.tables.records;


import al.bruno.task.organiser.tables.Task;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record6<Integer, String, Integer, Float, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>task._id</code>.
     */
    public void set_Id(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>task._id</code>.
     */
    public Integer get_Id() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>task._subject</code>.
     */
    public void set_Subject(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>task._subject</code>.
     */
    public String get_Subject() {
        return (String) get(1);
    }

    /**
     * Setter for <code>task._task_type</code>.
     */
    public void set_TaskType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>task._task_type</code>.
     */
    public Integer get_TaskType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>task._duration</code>.
     */
    public void set_Duration(Float value) {
        set(3, value);
    }

    /**
     * Getter for <code>task._duration</code>.
     */
    public Float get_Duration() {
        return (Float) get(3);
    }

    /**
     * Setter for <code>task._difficulties</code>.
     */
    public void set_Difficulties(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>task._difficulties</code>.
     */
    public Integer get_Difficulties() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>task._deadline</code>.
     */
    public void set_Deadline(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>task._deadline</code>.
     */
    public String get_Deadline() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, Float, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, Integer, Float, Integer, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Task.TASK._ID;
    }

    @Override
    public Field<String> field2() {
        return Task.TASK._SUBJECT;
    }

    @Override
    public Field<Integer> field3() {
        return Task.TASK._TASK_TYPE;
    }

    @Override
    public Field<Float> field4() {
        return Task.TASK._DURATION;
    }

    @Override
    public Field<Integer> field5() {
        return Task.TASK._DIFFICULTIES;
    }

    @Override
    public Field<String> field6() {
        return Task.TASK._DEADLINE;
    }

    @Override
    public Integer component1() {
        return get_Id();
    }

    @Override
    public String component2() {
        return get_Subject();
    }

    @Override
    public Integer component3() {
        return get_TaskType();
    }

    @Override
    public Float component4() {
        return get_Duration();
    }

    @Override
    public Integer component5() {
        return get_Difficulties();
    }

    @Override
    public String component6() {
        return get_Deadline();
    }

    @Override
    public Integer value1() {
        return get_Id();
    }

    @Override
    public String value2() {
        return get_Subject();
    }

    @Override
    public Integer value3() {
        return get_TaskType();
    }

    @Override
    public Float value4() {
        return get_Duration();
    }

    @Override
    public Integer value5() {
        return get_Difficulties();
    }

    @Override
    public String value6() {
        return get_Deadline();
    }

    @Override
    public TaskRecord value1(Integer value) {
        set_Id(value);
        return this;
    }

    @Override
    public TaskRecord value2(String value) {
        set_Subject(value);
        return this;
    }

    @Override
    public TaskRecord value3(Integer value) {
        set_TaskType(value);
        return this;
    }

    @Override
    public TaskRecord value4(Float value) {
        set_Duration(value);
        return this;
    }

    @Override
    public TaskRecord value5(Integer value) {
        set_Difficulties(value);
        return this;
    }

    @Override
    public TaskRecord value6(String value) {
        set_Deadline(value);
        return this;
    }

    @Override
    public TaskRecord values(Integer value1, String value2, Integer value3, Float value4, Integer value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Integer _Id, String _Subject, Integer _TaskType, Float _Duration, Integer _Difficulties, String _Deadline) {
        super(Task.TASK);

        set_Id(_Id);
        set_Subject(_Subject);
        set_TaskType(_TaskType);
        set_Duration(_Duration);
        set_Difficulties(_Difficulties);
        set_Deadline(_Deadline);
    }
}
